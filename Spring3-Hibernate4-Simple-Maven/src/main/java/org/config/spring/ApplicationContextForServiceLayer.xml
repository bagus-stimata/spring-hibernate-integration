<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
   
   <!-- Configurasi transaction manajer dalam hal ii kita menggunakan hibernate. setting ada di bean bawah  -->
   <tx:annotation-driven />
   
   <!-- Scanning dao yang akan dijadikan sebagai  -->
    <context:component-scan base-package="org.config.spring.hibernate.dao.impl"/>
    <context:component-scan base-package="org.config.spring.hibernate.service.impl"/>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:org/config/spring/jdbc/jdbc.properties"/>
          
 <!--Kalau pake Dao Bean pake: org.springframework.jdbc.datasource.DriverManagerDataSource
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.mysql.driver}"
          p:url="${jdbc.mysql.url}"
          p:username="${jdbc.mysql.username}"
          p:password="${jdbc.mysql.password}"/>
  -->        

 <!--Kalau pake Service Manager pake: org.apache.commons.dbcp.BasicDataSource   -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="${jdbc.mysql.driver}" />
    <property name="url" value="${jdbc.mysql.url}" />
    <property name="username" value="${jdbc.mysql.username}" />
    <property name="password" value="${jdbc.mysql.password}" />
  </bean>

	<!-- 
		Pada hibernate4 cuma ada LocalSessionFactoryBean tidakadak annotation
		LocalSessionFactoryBean: bekerja baik untuk XML mapping maupun annotation mapping
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:org/config/spring/hibernate/hibernate.cfg.xml"/>
	Jika ingin men-scan automatically package tempat model atau entity maka harus ditaruh di ApplicationContext.xmp Spring
	Bukan pada Hibernatenya
	Sbg contoh: Mahasiswa, Matkul, Jurusan, Krs di-NON-AKTIFKAN tapi tetap mau running 

		<property name="packagesToScan" value="org.config.spring.hibernate.model" />                        
    </bean>
	-->
	    
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <!--Saya masih belum bisa menggunakan: hibernate.cfg.xml: No configLocation for Service Layer   
    <property name="configLocation" value="classpath:org/config/spring/hibernate/hibernate.cfg.xml"/>
    -->
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <prop key="hibernate.show_sql">false</prop>
      </props>
    </property>
    
    <property name="packagesToScan" value="org.config.spring.hibernate.model" />
  </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <!-- List bean berisi dao: No DaoBeans for Service Layer     
    <import resource="DaoBeans.xml"/>    
	-->
</beans>
